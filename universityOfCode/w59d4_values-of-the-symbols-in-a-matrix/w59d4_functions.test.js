/* ************functions.test.js**************** */
const checkScore = require("./functions");

test("test 1", () => {
  expect(checkScore([["!!!"]])).toBe(32);
});

test("test 2", () => {
  expect(
    checkScore([
      ["X", "!!!", "#", "#", "!", "#", "!"],
      ["!", "!", "X", "X", "#", "O", "!!!"],
      ["#", "!", "!!!", "X", "O", "!!!", "#"],
      ["!!!", "O", "#", "O", "#", "O", "!!!"],
      ["!!!", "!!", "!", "X", "#", "!!!", "!!!"],
      ["O", "!!", "!!!", "!!!", "X", "#", "X"],
      ["O", "X", "!", "!!!", "!!!", "#", "X"],
    ])
  ).toBe(7);
});

test("test 3", () => {
  expect(checkScore([["!!"]])).toBe(0);
});

test("test 4", () => {
  expect(
    checkScore([
      ["O", "!!!", "!", "!", "!!!", "!", "#", "!!"],
      ["!!", "#", "O", "!!", "X", "#", "!!!", "!!"],
      ["!!!", "#", "!!!", "!!!", "!!!", "!!!", "!!!", "!!"],
      ["!", "!!", "X", "O", "!", "O", "#", "#"],
      ["#", "!!!", "#", "O", "X", "!!", "X", "#"],
      ["!!!", "!!", "#", "O", "!!!", "X", "!!", "!"],
      ["#", "!!!", "O", "X", "#", "#", "!!!", "!!!"],
      ["!!", "#", "!!!", "!", "X", "!!!", "!", "O"],
    ])
  ).toBe(0);
});

test("test 5", () => {
  expect(checkScore([["!!!"]])).toBe(42);
});

test("test 6", () => {
  expect(
    checkScore([
      ["!!!", "#", "X", "!", "!!", "O", "X", "!!!", "!!!", "O", "#", "O"],
      ["!", "O", "!!!", "!!!", "!", "!!!", "#", "!!!", "X", "X", "!!!", "#"],
      ["!!", "!", "!", "!", "!!", "X", "O", "O", "X", "O", "!!!", "#"],
      ["!!!", "!", "!", "!!", "#", "!!!", "!!", "O", "#", "#", "X", "#"],
      ["X", "!", "!!!", "!!!", "!", "O", "!!", "#", "#", "!!", "X", "#"],
      ["!", "X", "!!!", "!", "!", "!", "O", "!!!", "X", "!!", "#", "!!!"],
      ["!!", "#", "#", "!!", "!", "!", "X", "X", "#", "!!", "O", "#"],
      ["O", "!", "O", "X", "!!!", "X", "!!", "X", "!", "#", "!", "O"],
      ["O", "!!!", "O", "X", "!", "!!", "O", "#", "!!!", "!", "!!!", "O"],
      ["#", "!!", "!", "O", "X", "!", "!", "!!!", "!!!", "!!!", "!!!", "!!"],
      ["#", "!!!", "#", "!!", "O", "!!", "!!!", "#", "X", "!!", "#", "X"],
      ["#", "#", "!", "X", "!", "!!!", "X", "O", "#", "!", "!", "X"],
    ])
  ).toBe(4);
});

test("test 7", () => {
  expect(
    checkScore([
      ["!!!", "!", "X", "!!!", "!", "#", "!!", "!", "!", "!!", "O"],
      ["#", "X", "!", "!!!", "X", "!", "#", "!!", "!!!", "!!", "X"],
      ["!", "O", "!", "!!!", "#", "X", "X", "!!", "#", "!!!", "!!!"],
      ["#", "O", "!", "!", "!!!", "!", "#", "X", "O", "#", "!"],
      ["!", "X", "O", "X", "!!!", "!!!", "X", "!", "#", "#", "!"],
      ["X", "X", "!!", "X", "X", "X", "X", "!!", "O", "!!!", "O"],
      ["!!!", "!", "O", "!", "O", "!!", "X", "!!", "!", "#", "!"],
      ["!!", "X", "!!!", "!!", "!!", "#", "O", "X", "#", "X", "#"],
      ["X", "O", "!", "O", "O", "!!", "!", "!!!", "#", "#", "!!"],
      ["X", "O", "!!!", "#", "!!", "!", "#", "!!", "!!!", "!", "#"],
      ["#", "!!", "#", "!!", "O", "O", "#", "!", "!", "!!", "#"],
    ])
  ).toBe(23);
});

test("test 8", () => {
  expect(
    checkScore([
      ["!!!", "!!", "X", "!!", "#", "!", "O"],
      ["!!", "!!!", "!!!", "O", "!!", "!!", "!"],
      ["!!!", "O", "!!!", "!", "!!!", "!!", "X"],
      ["!", "!!", "!", "!!", "!!!", "X", "#"],
      ["#", "!!", "!!!", "X", "O", "#", "X"],
      ["X", "X", "!", "X", "!!!", "X", "O"],
      ["O", "!", "!", "!!!", "#", "X", "O"],
    ])
  ).toBe(0);
});

test("test 9", () => {
  expect(
    checkScore([
      ["!!", "!", "!!!", "!!!", "!!", "!", "X"],
      ["#", "!!", "!!", "#", "#", "!", "!!!"],
      ["X", "O", "X", "!", "!", "!", "X"],
      ["!!", "X", "!!", "!", "O", "!", "#"],
      ["!", "X", "!", "O", "O", "#", "O"],
      ["X", "!!!", "O", "X", "X", "#", "!"],
      ["!", "!", "#", "!!!", "O", "#", "!"],
    ])
  ).toBe(13);
});

test("test 10", () => {
  expect(
    checkScore([
      ["#", "!"],
      ["!!", "X"],
    ])
  ).toBe(2);
});
